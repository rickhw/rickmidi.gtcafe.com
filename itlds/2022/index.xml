<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GTCafe Studio – 2022</title>
    <link>https://www.gtcafe.com/itlds/2022/</link>
    <description>Recent content in 2022 on GTCafe Studio</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Tue, 29 Nov 2022 00:00:00 +0000</lastBuildDate>
    
	  <atom:link href="https://www.gtcafe.com/itlds/2022/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Itlds: 拆服務？分類？</title>
      <link>https://www.gtcafe.com/itlds/2022/1129_meditation/</link>
      <pubDate>Tue, 29 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.gtcafe.com/itlds/2022/1129_meditation/</guid>
      <description>
        
        
        &lt;p&gt;紀錄 #冥想 歷程，開始到現在差不多有兩年 …&lt;/p&gt;
&lt;h2 id=&#34;方法&#34;&gt;方法&lt;/h2&gt;
&lt;p&gt;網路上有很多方法，我用的是最普通的全身掃描方式，搭配數數集中注意力。每次深度呼吸都是一次數，每次數，都做全身掃描，像是放鬆肩頸、放鬆臉部肌肉、忽略某個部位的搔癢、感覺呼吸的流動、呼吸的溫度 … etc.&lt;/p&gt;
&lt;p&gt;剛開始練習冥想，思緒會到處亂跑，很容易被思緒拉著走，變得不知道在做啥。透過數數，可以把思緒拉回來，讓亂七八糟的思緒能被自己觀察。&lt;/p&gt;
&lt;h2 id=&#34;節奏&#34;&gt;節奏&lt;/h2&gt;
&lt;p&gt;我現在每次 20 分鐘，採坐姿，有時候也會站著。練習時間是每天早上起床後，盥洗後就先冥想。通常前一晚吃太飽、或者吃太多刺激性的食物，剛開始會影響冥想過程思緒，冥想練多了，可以開始掃描身體因為飲食造成的副作用。。。簡單說，身體在躁動，冥想過程都觀察的到，也有可能是老了的關係 XDD&lt;/p&gt;
&lt;h2 id=&#34;睡前冥想&#34;&gt;睡前冥想&lt;/h2&gt;
&lt;p&gt;有時候睡前也會冥想，特別是工作煩躁，或者睡不著的時候。以前睡不著就是看金庸小說，有時候看一下就有睡意，有時候一看就到天亮了 XDD&lt;/p&gt;
&lt;p&gt;冥想的好處是，可以清空今天整天工作的壓力，讓腦袋漸進式關機，然後比較容易入睡。因為我是很淺眠，一點風吹草動就會醒過來，所以睡眠品質一直是很在乎的事情，透過冥想，有些許改善。雖然改善睡眠，其實運動更有效 XDD&lt;/p&gt;
&lt;h2 id=&#34;好處&#34;&gt;好處&lt;/h2&gt;
&lt;p&gt;快兩年的練習，感覺好處不少，首先是思緒比以前都能更快的集中，要進入心流也更容易。當然這跟我配合作息也有關係。這兩年大概就是每天五點或五點半起床，然後開始冥想 20m，接下來吃早餐，去上班。通常八點到辦公室，因為很早到，不會有打擾，所以每天都可以專注至少 90m 左右，這一兩年也透過這樣的方式產出一些東西。&lt;/p&gt;
&lt;p&gt;除了能夠更專注，明顯有感覺的就是靈感與創造力更多，喇賽文可以寫更多的意思 XDD&lt;/p&gt;
&lt;p&gt;可能習慣用第三者觀察自己，觀察外部的人事物，很多事情可以觀察更多，所以可寫的東西變多了，剩下的就是花時間敲下來。。。觀察力變好從開會過程也更能夠察覺被歪樓，或者緊抓會議主軸。&lt;/p&gt;
&lt;p&gt;最後，冥想 好處多多，推薦大家都來練。。。不過練那麼久的呼吸，沒練成啥水之呼吸、火之呼吸 …&lt;/p&gt;
&lt;p&gt;—
附圖是我冥想紀錄的標題，格式是 冥想時間 / 呼吸次數&lt;/p&gt;
&lt;h2 id=&#34;原始資料&#34;&gt;原始資料&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;發表時間：2022/11/29&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.facebook.com/rick.kyhwang/posts/pfbid0ZhQy5EHJr1pVFeQCFSNFnP7RiLZ9xt2UoH7ZWzpW2DAw32wt5SwXHVbHsBigAgVfl&#34;&gt;原文連結&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Itlds: 拆服務？分類？</title>
      <link>https://www.gtcafe.com/itlds/2022/0818/</link>
      <pubDate>Thu, 18 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://www.gtcafe.com/itlds/2022/0818/</guid>
      <description>
        
        
        &lt;p&gt;Source: &lt;a href=&#34;https://www.facebook.com/rick.kyhwang/posts/pfbid0Q8KPR6FYgcy81pPJu6ZEL9CHyvq3UnMFwjV8DNkGhr8J4a23QDdz8NqXwvSjRxZZl&#34;&gt;2022/08/18&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;#分類 #拆服務 #拆組織&lt;/p&gt;
&lt;p&gt;物件導向的專有名詞：類別 (Class)，本質上就是 #分類 的概念。換言之，就是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;描述一個類別 (Class, n)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;這件事情背後的本質就是在分類 (Classify, v)，也就是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一堆東西，先經過分類 (動作) 之後，定義類別 (名詞)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;這個名詞定義的精準程度 (這裡牽涉到語言的字彙程度)，決定領域 (Domain) 涉入的深度。&lt;/p&gt;
&lt;p&gt;例如，電商領域的會員 (Member) 是領域知識，如果要用一個 Class 描述會員會怎麼描述？&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Member&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    String firstName&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    String lastName&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    String age&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    String gender&lt;span style=&#34;color:#f92672&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;這個例子是結果了，如果反過來，先有一堆東西：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;firstName&lt;/li&gt;
&lt;li&gt;lastName&lt;/li&gt;
&lt;li&gt;age&lt;/li&gt;
&lt;li&gt;gender&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;那會怎麼命名？經過分析可能會有以下 #名詞：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Profile&lt;/li&gt;
&lt;li&gt;Identity&lt;/li&gt;
&lt;li&gt;Member&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我的字彙有點少，反正至少有這三個 XDD&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;另外一個我常舉的例子，
通常是寫 Code 有一定經驗的人一定會 #想做 的:
(如果你沒感覺就 &amp;hellip;.)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;一個 Class 裡有 20 個 Method&lt;/li&gt;
&lt;li&gt;一個 Method 有 1000 行&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;換個角度，再舉一些例子：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;一個組織有 30 個人&lt;/li&gt;
&lt;li&gt;一個房間有 300 坪&lt;/li&gt;
&lt;li&gt;一個書櫃有 300 本書&lt;/li&gt;
&lt;li&gt;一個系統裡有 30 個角色&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;這年代很多架構都是分散式架構，
大多都要拆服務，拆成微服務、奈米服務
很多人會說，要用一些方法來拆
像是現在流行的 #DDD ..&lt;/p&gt;
&lt;p&gt;其實如果你有從上看到這裡
大概就會知道我的直接概念就是
多就拆
拆就去管理依賴
不面對這問題
時間到了
他就會來面對你&lt;/p&gt;
&lt;p&gt;至於啥是多？
需要科學的量化方法？
還是團隊共識？
還是主管決？
只要大家看清楚就好&lt;/p&gt;
&lt;p&gt;不要真的要給團隊共識決
不敢決
決了也不敢負責任&lt;/p&gt;
&lt;p&gt;或者主管決
做了不好決策
該反應又不說
又靠北主管無能&lt;/p&gt;
&lt;p&gt;科學化方法自己卻沒有能力量化
因為連自己寫過多少 Code 都沒能力掌握&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
